{"ast":null,"code":"import React,{useState}from\"react\";import{ToastContainer,toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SubscribeNewsletter(){const[inputEmail,setInputEmail]=useState(\"\");const[isButtonDisabled,setIsButtonDisabled]=useState(false);const emailRegex=/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;const handleEmailInput=event=>{setInputEmail(event.target.value);};const handleBookAppointmentClick=()=>{if(!isButtonDisabled){emailRegex.test(inputEmail)?toast.success(\"Subscribed to Newsletter !\",{position:toast.POSITION.TOP_CENTER,onOpen:()=>{setIsButtonDisabled(true);setInputEmail(\"\");},onClose:()=>setIsButtonDisabled(false)}):toast.error(\"Invalid Email Address !\",{position:toast.POSITION.TOP_CENTER,onOpen:()=>setIsButtonDisabled(true),onClose:()=>setIsButtonDisabled(false)});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"ft-info-p2\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"ft-input-title\",children:\"Stay Update to our Newsletter\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",inputMode:\"email\",className:\"ft-input\",placeholder:\"Enter your email address\",name:\"email\",value:inputEmail,onChange:handleEmailInput,autoComplete:\"true\"}),/*#__PURE__*/_jsx(\"button\",{className:\"text-appointment-btn\",type:\"button\",disabled:isButtonDisabled,onClick:handleBookAppointmentClick,children:\"Subscribe\"}),/*#__PURE__*/_jsx(ToastContainer,{autoClose:4000,limit:1,closeButton:false})]});}export default SubscribeNewsletter;","map":{"version":3,"names":["React","useState","ToastContainer","toast","jsx","_jsx","jsxs","_jsxs","SubscribeNewsletter","inputEmail","setInputEmail","isButtonDisabled","setIsButtonDisabled","emailRegex","handleEmailInput","event","target","value","handleBookAppointmentClick","test","success","position","POSITION","TOP_CENTER","onOpen","onClose","error","className","children","type","inputMode","placeholder","name","onChange","autoComplete","disabled","onClick","autoClose","limit","closeButton"],"sources":["C:/Users/BILLURI VARUN/Downloads/Health-Plus-main/Health-Plus-main/src/Components/SubscribeNewsletter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction SubscribeNewsletter() {\n  const [inputEmail, setInputEmail] = useState(\"\");\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n\n  const handleEmailInput = (event) => {\n    setInputEmail(event.target.value);\n  };\n\n  const handleBookAppointmentClick = () => {\n    if (!isButtonDisabled) {\n      emailRegex.test(inputEmail)\n        ? toast.success(\"Subscribed to Newsletter !\", {\n            position: toast.POSITION.TOP_CENTER,\n            onOpen: () => {\n              setIsButtonDisabled(true);\n              setInputEmail(\"\");\n            },\n            onClose: () => setIsButtonDisabled(false),\n          })\n        : toast.error(\"Invalid Email Address !\", {\n            position: toast.POSITION.TOP_CENTER,\n            onOpen: () => setIsButtonDisabled(true),\n            onClose: () => setIsButtonDisabled(false),\n          });\n    }\n  };\n\n  return (\n    <div className=\"ft-info-p2\">\n      <p className=\"ft-input-title\">Stay Update to our Newsletter</p>\n      <input\n        type=\"text\"\n        inputMode=\"email\"\n        className=\"ft-input\"\n        placeholder=\"Enter your email address\"\n        name=\"email\"\n        value={inputEmail}\n        onChange={handleEmailInput}\n        autoComplete=\"true\"\n      />\n      <button\n        className=\"text-appointment-btn\"\n        type=\"button\"\n        disabled={isButtonDisabled}\n        onClick={handleBookAppointmentClick}\n      >\n        Subscribe\n      </button>\n\n      <ToastContainer autoClose={4000} limit={1} closeButton={false} />\n    </div>\n  );\n}\n\nexport default SubscribeNewsletter;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,cAAc,CAAEC,KAAK,KAAQ,gBAAgB,CACtD,MAAO,uCAAuC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,mBAAmBA,CAAA,CAAG,CAC7B,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACU,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAAAY,UAAU,CAAG,kDAAkD,CAErE,KAAM,CAAAC,gBAAgB,CAAIC,KAAK,EAAK,CAClCL,aAAa,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACnC,CAAC,CAED,KAAM,CAAAC,0BAA0B,CAAGA,CAAA,GAAM,CACvC,GAAI,CAACP,gBAAgB,CAAE,CACrBE,UAAU,CAACM,IAAI,CAACV,UAAU,CAAC,CACvBN,KAAK,CAACiB,OAAO,CAAC,4BAA4B,CAAE,CAC1CC,QAAQ,CAAElB,KAAK,CAACmB,QAAQ,CAACC,UAAU,CACnCC,MAAM,CAAEA,CAAA,GAAM,CACZZ,mBAAmB,CAAC,IAAI,CAAC,CACzBF,aAAa,CAAC,EAAE,CAAC,CACnB,CAAC,CACDe,OAAO,CAAEA,CAAA,GAAMb,mBAAmB,CAAC,KAAK,CAC1C,CAAC,CAAC,CACFT,KAAK,CAACuB,KAAK,CAAC,yBAAyB,CAAE,CACrCL,QAAQ,CAAElB,KAAK,CAACmB,QAAQ,CAACC,UAAU,CACnCC,MAAM,CAAEA,CAAA,GAAMZ,mBAAmB,CAAC,IAAI,CAAC,CACvCa,OAAO,CAAEA,CAAA,GAAMb,mBAAmB,CAAC,KAAK,CAC1C,CAAC,CAAC,CACR,CACF,CAAC,CAED,mBACEL,KAAA,QAAKoB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBvB,IAAA,MAAGsB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,+BAA6B,CAAG,CAAC,cAC/DvB,IAAA,UACEwB,IAAI,CAAC,MAAM,CACXC,SAAS,CAAC,OAAO,CACjBH,SAAS,CAAC,UAAU,CACpBI,WAAW,CAAC,0BAA0B,CACtCC,IAAI,CAAC,OAAO,CACZf,KAAK,CAAER,UAAW,CAClBwB,QAAQ,CAAEnB,gBAAiB,CAC3BoB,YAAY,CAAC,MAAM,CACpB,CAAC,cACF7B,IAAA,WACEsB,SAAS,CAAC,sBAAsB,CAChCE,IAAI,CAAC,QAAQ,CACbM,QAAQ,CAAExB,gBAAiB,CAC3ByB,OAAO,CAAElB,0BAA2B,CAAAU,QAAA,CACrC,WAED,CAAQ,CAAC,cAETvB,IAAA,CAACH,cAAc,EAACmC,SAAS,CAAE,IAAK,CAACC,KAAK,CAAE,CAAE,CAACC,WAAW,CAAE,KAAM,CAAE,CAAC,EAC9D,CAAC,CAEV,CAEA,cAAe,CAAA/B,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}